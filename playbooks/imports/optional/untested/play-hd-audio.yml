#!/usr/bin/env ansible-playbook
# Set Pipewire Configs to Support Variable and Higher Bitrates
# @see https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/Performance-tuning
- hosts: desktop
  name: HD Audio
  tasks:
    - name: Copy Pipewire Config to User Home
      copy:
        remote_src: true
        src: /usr/share/pipewire/
        dest: /home/{{ user_login }}/.config/pipewire
#        # don't copy if already copied
#        force: false
      notify: pw-restart

    - name: Update pipewire.conf
      lineinfile:
        line: "{{ item.line }}"
        path: /home/{{ user_login }}/.config/pipewire/pipewire.conf
        regexp: "{{ item.regexp }}"
      loop:
        - line: "    default.clock.allowed-rates = [ 44100 48000 88200 96000 176400 192000 ]"
          regexp: default\.clock\.allowed-rates
        - line: "    default.clock.rate          = 192000"
          regexp: default\.clock\.rate
        - line: "    default.clock.min-quantum   = 32"
          regexp: default\.clock\.min-quantum
      notify: pw-restart

    - name: Update client.conf
      lineinfile:
        path: /home/{{ user_login }}/.config/pipewire/client.conf
        line: "    resample.quality      = 10"
        regexp: resample\.quality
      notify: pw-restart

    - name: Update pipewire-pulse.conf
      lineinfile:
        path: /home/{{ user_login }}/.config/pipewire/pipewire-pulse.conf
        line: "    resample.quality      = 10"
        regexp: resample\.quality
      notify: pw-restart

    - name: Check if speech-dispatcher config exists
      stat:
        path: /etc/speech-dispatcher/speechd.conf
      register: speechd_conf
      become: true

    - name: Disable Speech Dispatcher Autospawn
      become: true
      lineinfile:
        path: /etc/speech-dispatcher/speechd.conf
        line: "DisableAutoSpawn"
      when: speechd_conf.stat.exists

#    - name: Install realtiome-setup
#      dnf:
#        name: realtime-setup
#
#    - name: Enable Realtime Services
#      systemd:
#        service: "{{ item }}"
#        enabled: true
#        state: started
#      loop:
#        - realtime-entsk.service
#        - realtime-setup.service
#
#    - name: Add current user to realtime group
#      user:
#        name: "{{ user_login }}"
#        groups: realtime
#        append: true

  handlers:
    - name: pw-restart
      become: true
      become_user: "{{ user_login }}"
      systemd:
        name: "{{ item }}"
        state: restarted
        scope: user
      loop:
        - pipewire
        - pipewire-pulse



